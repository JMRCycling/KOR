name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  # ==========================================
  # BUILD & PREPARE DEPLOYMENT
  # ==========================================
  build:
    name: Build & Prepare Deployment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production-ready files
      run: npm run build:prod
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: dist/
        retention-days: 1

  # ==========================================
  # DEPLOY TO PRODUCTION
  # ==========================================
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: production-build
        path: dist/
        
    - name: Setup SSH for deployment
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
        
    - name: Deploy to server via rsync
      run: |
        echo "üöÄ Deploying to jmrcycling.com..."
        rsync -avz --delete --exclude='.git*' -e "ssh -o StrictHostKeyChecking=no" dist/ ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_SERVER_HOST }}:/var/www/html/
        echo "‚úÖ Deployment successful!"
        
    - name: Verify deployment with uptime check
      run: |
        echo "üîç Verifying deployment..."
        npm install --global http-server
        http-server dist -p 8080 &
        sleep 5
        npm run test:uptime

  # ==========================================
  # POST-DEPLOYMENT MONITORING
  # ==========================================
  post-deploy:
    name: Post-Deployment Monitoring
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run broken link checker
      run: npm run test:links
      
    - name: Send deployment notification
      if: always()
      run: |
        echo "Deployment to production complete. Status: ${{ job.status }}"
        # Add a step here to notify your team via Slack, Discord, or email
        # For example, using a Slack webhook:
        # curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment complete. Status: ${{ job.status }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}

